from telebot import types
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton


class TextBuilder(object):

    _await_image_generating_text = None
    _subscribe_text = None
    _—Åant_processed_text = None
    _start_message = None

    @classmethod
    def start_message(cls, first_name: str) -> str:
        cls._start_message = f'''
üëã –ü—Ä–∏–≤–µ—Ç <b>{", "+ first_name if first_name is not None else ''}</b>!
–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π sticker-pack, –∑–∞–≥—Ä—É–∑–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.

<b>–°–ª–µ–¥—É–π—Ç–µ —Å–æ–≤–µ—Ç–∞–º:</b>
ü§µ ‚Äî –ù–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ä–æ—à–æ –≤–∏–¥–Ω–æ –≤–∞—à–µ –ª–∏—Ü–æ;
üôãüèª‚Äç‚ôÇÔ∏è ‚Äî –ù–∞ —Ñ–æ—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥—Ä—É–≥–∏—Ö –ª–∏—Ü, –∫—Ä–æ–º–µ –≤–∞—à–µ–≥–æ;
üé© ‚Äî –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –±–µ–∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —É–±–æ—Ä–∞ –∏ –æ—á–∫–æ–≤;
ü•∏ ‚Äî –ï—Å–ª–∏ –≤—ã –Ω–æ—Å–∏—Ç–µ –æ—á–∫–∏, —Ç–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ –±–µ–∑ –Ω–∏—Ö;
üôä ‚Äî –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö, –±–æ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Ç–æ–ª—å–∫–æ –ª–∏—Ü–∞ –ª—é–¥–µ–π;

‚åõÔ∏è –û–±—ã—á–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 1-–æ–π –º–∏–Ω—É—Ç—ã, –Ω–æ –ø—Ä–∏ –±–æ–ª—å—à–æ–π –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—å –¥–æ–ª—å—à–µ ü•π
'''
        return cls._start_message

    @classmethod
    def —Åant_processed(cls) -> str:
        cls._—Åant_processed_text = '''
üôà –û–π!  
ü§∑‚Äç‚ôÇÔ∏è –Ø –µ—â–µ –Ω–µ —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ, —Å—Ç–∏–∫–µ—Ä—ã, —Ç–µ–∫—Å—Ç –∏ –¥—Ä—É–≥–∏–µ —Ñ–∞–π–ª—ã, –∫—Ä–æ–º–µ —Ñ–æ—Ç–æ.
üì∏ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.        
'''
        return cls._—Åant_processed_text

    @classmethod
    def subscribe_text(cls) -> str:
        cls._subscribe_text = '''
–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º–µ–º–æ–≤ —Å –≤–∞–º–∏ –≤ –≥–ª–∞–≤–Ω–æ–π —Ä–æ–ª–∏, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ <a href="https://t.me/+enenh6Q8DmNmZDIy">Telegram-–∫–∞–Ω–∞–ª</a> üòé

ü•∞ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª ‚Äî –ª—É—á—à–∏–π –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞–º –Ω–∞ –ù–æ–≤—ã–π –≥–æ–¥         
'''
        return cls._subscribe_text

    @classmethod
    def await_image_generating(cls) -> str:
        cls._await_image_generating_text = '''
–ú–∞–≥–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, —Å–∫–æ—Ä–æ –≤—Å–µ —Å–ª—É—á–∏—Ç—Å—è ‚ú®
–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Å–µ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ, –º—ã –ø—Ä–∏—à–ª–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ê –ø–æ–∫–∞ –º–æ–∂–Ω–æ –∑–∞–≤–∞—Ä–∏—Ç—å —á–∞–π –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å üôà
'''
        return cls._await_image_generating_text
        

class MarkupBuilder(TextBuilder):

    _hide_menu: types.ReplyKeyboardRemove() = None

    @classmethod
    @property
    def hide_reply_markup(cls) -> types.ReplyKeyboardRemove():
        cls._hide_menu: object = types.ReplyKeyboardRemove()
        return cls._hide_menu

    @classmethod
    def subscribe_btn_markup(cls, channel_link: str, user_id, channel: str) -> types.InlineKeyboardMarkup:
        return types.InlineKeyboardMarkup(
            row_width=1,
            keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è!",
                        url=channel_link,
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="‚úÖ –Ø —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω",
                        callback_data=f"subscribed:{user_id}:{channel}",
                    )
                ]
            ]
        )





